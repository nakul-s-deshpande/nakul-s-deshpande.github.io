# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy site

on:
  push:
    branches: ["main", "master"] # Ensure 'main' and 'master' are covered
    paths: # Keep your existing path filters
      - "assets/**"
      - "_sass/**"
      - "_scripts/**"
      - "**.bib"
      - "**.html"
      - "**.js"
      - "**.liquid"
      - "**/*.md"
      - "**.yml"
      - "Gemfile"
      - "Gemfile.lock"
      - "!.github/workflows/axe.yml"
      - "!.github/workflows/broken-links.yml"
      - "!.github/workflows/deploy-docker-tag.yml"
      - "!.github/workflows/deploy-image.yml"
      - "!.github/workflows/docker-slim.yml"
      - "!.github/workflows/lighthouse-badger.yml"
      - "!.github/workflows/prettier.yml"
      - "!lighthouse_results/**"
      - "!CONTRIBUTING.md"
      - "!CUSTOMIZE.md"
      - "!FAQ.md"
      - "!INSTALL.md"
      - "!README.md"
  pull_request: # Keep pull request trigger (for testing builds)
    branches:
      - master
      - main
    paths: # Keep your existing path filters
      - "assets/**"
      - "_sass/**"
      - "_scripts/**"
      - "**.bib"
      - "**.html"
      - "**.js"
      - "**.liquid"
      - "**/*.md"
      - "**.yml"
      - "Gemfile"
      - "Gemfile.lock"
      - "!.github/workflows/axe.yml"
      - "!.github/workflows/broken-links.yml"
      - "!.github/workflows/deploy-docker-tag.yml"
      - "!.github/workflows/deploy-image.yml"
      - "!.github/workflows/docker-slim.yml"
      - "!.github/workflows/lighthouse-badger.yml"
      - "!.github/workflows/prettier.yml"
      - "!lighthouse_results/**"
      - "!CONTRIBUTING.md"
      - "!CUSTOMIZE.md"
      - "!FAQ.md"
      - "!INSTALL.md"
      - "!README.md"
  workflow_dispatch: # Allows manual trigger

# IMPORTANT: Update permissions for the new deployment method
permissions:
  contents: read
  pages: write # This is new and crucial
  id-token: write # This is new and crucial for OIDC

# Allow only one concurrent deployment, skipping runs queued between the previous complete and new queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build: # Renamed from 'deploy' to 'build' for clarity, as it's the build step
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
      - name: Setup Ruby üíé
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3.5" # Use your current Ruby version
          bundler-cache: true
      - name: Setup Python üêç
        uses: actions/setup-python@v5
        with:
          python-version: "3.13" # Use your current Python version
          cache: "pip" # caching pip dependencies
      - name: Update _config.yml ‚öôÔ∏è
        uses: fjogeleit/yaml-update-action@main
        with:
          commitChange: false
          valueFile: "_config.yml"
          propertyPath: "giscus.repo"
          value: ${{ github.repository }}
      - name: Install and Build üîß
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          pip3 install --upgrade nbconvert
          export JEKYLL_ENV=production
          bundle exec jekyll build
          echo "Build finished and ready for artifact upload." # <-- Keep this line
      - name: Purge unused CSS üßπ
        run: |
          npm install -g purgecss
          purgecss -c purgecss.config.js

      # NEW: GitHub Pages setup and artifact upload steps
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site' # Ensure this matches where Jekyll builds your site

  # NEW: Deployment job - This is a new, separate job that uses the uploaded artifact
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    if: github.event_name != 'pull_request' # Only deploy on pushes, not PRs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # The official GitHub Pages deploy action
